//Check if a given binary tree is completed. A complete binary tree is one in which every level of the binary tree is completely filled except possibly the last level. Furthermore, all nodes are as far left as possible.
//
//Examples
//
//        5
//
//      /    \
//
//    3        8
//
//  /   \
//
//1      4
//
//is completed.
//
//        5
//
//      /    \
//
//    3        8
//
//  /   \        \
//
//1      4        11
//
//is not completed.
package round5;

import round4.TreeNode;

public class CheckIfBTComplete {
	public boolean checkComplete(TreeNode root) {
		if (root.right==null) {
			return true;
		}
		
		if (root.left==null && root.right!=null) {
			return false;
		}
		checkComplete(root.left);
		checkComplete(root.right);
		
		}
		return true;
		
	}
	

}
